name: Quality Gates

on:
  pull_request:
    branches: [ main, master ]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    needs: [frontend-quality, php-tests]
    
    steps:
    - name: Check frontend quality
      run: echo "Frontend quality checks passed"
      
    - name: Check PHP tests
      run: echo "PHP tests passed"
      
    - name: All quality gates passed
      run: echo "âœ… All quality gates have passed. PR is ready for review."

  frontend-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Check code formatting
      run: npm run format:check

    - name: Run Vitest tests
      run: npm run test:run

    - name: Build application
      run: npm run build

  php-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: php_order_management_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv

    - name: Copy environment file
      run: cp .env.example .env

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate application key
      run: php artisan key:generate

    - name: Configure database
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=php_order_management_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Run Laravel Pint (code style)
      run: ./vendor/bin/pint --test

    - name: Run PHPUnit tests
      run: php artisan test
      env:
        DB_DATABASE: php_order_management_test