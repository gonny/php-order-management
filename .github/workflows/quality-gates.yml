name: Quality Gates

on:
  pull_request:
    branches: [ main, master ]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    name: Quality Gates for PR

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: php_order_management_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Frontend Quality Gates
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Frontend - ESLint (must pass)
      run: npm run lint

    - name: Frontend - TypeScript check (informational)
      run: npm run svelte:check || echo "TypeScript errors found but not blocking"
      continue-on-error: true

    - name: Frontend - Code formatting check
      run: npm run format:check

    - name: Frontend - Build check
      run: npm run build

    # Backend Quality Gates
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: xdebug

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Set database connection
      run: |
        php artisan config:clear
        php artisan config:cache
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: php_order_management_test
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Run database migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: php_order_management_test
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Backend - PHP Pint (Code Style - must pass)
      run: ./vendor/bin/pint --test

    - name: Backend - PHP tests (must pass)
      run: composer test
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: php_order_management_test
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Quality Gates Summary
      run: |
        echo "✅ All quality gates passed!"
        echo "Frontend: ESLint ✅, Formatting ✅, Build ✅"
        echo "Backend: Code Style ✅, Tests ✅"
        echo "TypeScript: Informational only (not blocking)"